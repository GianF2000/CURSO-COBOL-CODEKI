       IDENTIFICATION DIVISION.
       PROGRAM-ID PGMVAC12.
      **********************************************************
      *                                                        *
      *                     SINCRONICO 14                      *
      *                                                        *
      **********************************************************
      *  Validar si TIP-DOC es "DU", "PA", "PE", "CI"; si va ok*
      *  entonces mover valores de arch entrada a salida       *
      *****************************************************************
      *   JCL    *                  ARCHIVOS                          *
      *****************************************************************
      * COMPILA  * E1CLIEN: KC03C12.FIX.SINCR14.PGMVAC12.E1.NOVCLIEN *
      * JCLEJEM1 * S1CLIOK: KC03C12.FIX.SINCR14.PGMVAC12.S1.NOVCLIEN *
      *                                                               *
      *****************************************************************
      ****************************************
      *      MANTENIMIENTO DE PROGRAMA       *
      ****************************************
      *  FECHA     *    DETALLE        * COD *
      ****************************************
      * 15-04-2025 * Creacion          * 001 *
      *            *                   *     *
      ****************************************
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
      * E1CLIEN es la variable interna del archivo de entrada y se
      * asigna al DDCLIEN que es variable externa establecida en el JOB

      * S1CLIOK es la variable interna del archivo de salida y se
      * asigna al DDCLIOK que es variable externa establecida en el JOB

      * El FS es una validador interno del estado del archivo asignado
       FILE-CONTROL.
           SELECT         E1CLIEN
           ASSIGN         DDCLIEN
           FILE STATUS IS FS-E1CLIEN
           .

           SELECT         S1CLIOK
           ASSIGN         DDCLIOK
           FILE STATUS IS FS-S1CLIOK
           .

      * Establecemos que E1CLIEN es de 50 caracteres alfanumericos Fijo
      *                y S1CLIOK es de 55 caracteres alfanumericos Fijo
       DATA DIVISION.
       FILE SECTION.
       FD  E1CLIEN
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS F.

       01  REG-E1CLIEN              PIC X(50)
           .

      * 5 caracteres de contador secuencial + 50 caracteres de la entrad
       FD  S1CLIOK
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS F.

       01  REG-S1CLIOK              PIC X(55)
           .

      **************************************
       WORKING-STORAGE SECTION.
      **************************************
       77  FILLER                   PIC X(26)      VALUE
            '* INICIO WORKING-STORAGE *'
           .

      *****  FILE STATUS  ******************
      * Variables establecidas arriba para validar estado de archivos
       77  FS-E1CLIEN               PIC X(02)
           .
           88  FS-E1-OK                            VALUE '00'
           .
           88  FS-E1-FIN-LECTURA                   VALUE '10'
           .
           88  FS-E1-ERROR                         VALUE '01' THRU '09'
                                                         '11' THRU '99'
           .

       77  FS-S1CLIOK               PIC X(02)
           .
           88  FS-S1-OK                            VALUE '00'
           .
           88  FS-S1-FIN-LECTURA                   VALUE '10'
           .
           88  FS-S1-ERROR                         VALUE '01' THRU '09'
                                                         '11' THRU '99'
           .

      *****  COPY DE ENTRADA  ***********************
           COPY CPNOVCLI
           .

      *****  COPY DE SALIDA  ***********************
           COPY CPNCLIV
           .

      ********  CONDICIONES A CUMPLIR PARA TIP-DOC  ********
       77  WS-CLI-DU                PIC X(2)       VALUE 'DU'
           .
       77  WS-CLI-PA                PIC X(2)       VALUE 'PA'
           .
       77  WS-CLI-PE                PIC X(2)       VALUE 'PE'
           .
       77  WS-CLI-CI                PIC X(2)       VALUE 'CI'
           .

      * CONTADOR DE TOTALES
       77  WS-CANT-LEIDOS           PIC 9(3)       VALUE ZEROS
           .
       77  WS-CANT-OK               PIC 9(3)       VALUE ZEROS
           .
       77  WS-CANT-ERROR            PIC 9(3)       VALUE ZEROS
           .
       77  WS-CANT-EDIT             PIC Z(3)       VALUE ZEROS
           .

       77  FILLER                   PIC X(26)      VALUE
            '* FINAL  WORKING-STORAGE *'
           .
      ***************************************************************.
       PROCEDURE DIVISION.
      ***************
       MAIN-PROGRAM.
      ***************
           PERFORM    1000-INICIO
              THRU    1000-INICIO-F

           PERFORM    2000-PROCESO
              THRU    2000-PROCESO-F
             UNTIL    FS-E1-FIN-LECTURA
                OR    FS-E1-ERROR

           PERFORM    3000-FINAL
              THRU    3000-FINAL-F
           .

       MAIN-PROGRAM-F. GOBACK.
      ***************
       1000-INICIO.
      ***************
      * Apertura de archivo de entrada
           OPEN INPUT E1CLIEN

      * Si hay error en la apertura de archivo, notificar
           IF         FS-E1-ERROR
              DISPLAY '* ERROR EN OPEN ENTRADA = '
                      FS-E1CLIEN
              MOVE    9999                         TO RETURN-CODE

      * Leer registro de archivo entrada si no hay error; notificar si
      * el archivo estuviera vacio.
           ELSE
              PERFORM 2100-LEER
                 THRU 2100-LEER-F
              IF      FS-E1-FIN-LECTURA
                 DISPLAY "Archivo vacio."
                 MOVE    9999                      TO RETURN-CODE

              END-IF
           END-IF

      *
      * Apertura de archivo de salida
           OPEN OUTPUT S1CLIOK

      * Si hay error en la apertura de archivo, notificar
           IF         FS-S1-ERROR
              DISPLAY '* ERROR EN OPEN SALIDA = '
                      FS-S1CLIOK
              MOVE    9999                         TO RETURN-CODE

           END-IF
           .

       1000-INICIO-F. EXIT.

      ***************
       2000-PROCESO.
      ***************
      * Grabar en arch salida si TIP-DOC es valida; sino, mostrar error.
           IF         NOV-TIP-DOC
           =         (WS-CLI-DU
           OR         WS-CLI-PA
           OR         WS-CLI-PE
           OR         WS-CLI-CI)
              PERFORM 2200-GRABAR-OK
                 THRU 2200-GRABAR-OK-F

           ELSE
              ADD     1                            TO WS-CANT-ERROR
              DISPLAY "TIPO DE DOCUMENTO '"
                      NOV-TIP-DOC
                      "' INVALIDO, CON NRO-DOC: "
                      NOV-NRO-DOC

           END-IF

      * Luego de grabar, leer siguiente registro.
           PERFORM    2100-LEER
              THRU    2100-LEER-F
           .
       2000-PROCESO-F. EXIT.

      ***************
       2100-LEER.
      ***************
           READ       E1CLIEN                    INTO WS-REG-NOVCLIE

      * Aumentar en 1 al contador de leido si lectura es OK.
           EVALUATE   FS-E1CLIEN
           WHEN       '00'
              ADD     1                            TO WS-CANT-LEIDOS

           WHEN       '10'
              CONTINUE

           WHEN       OTHER
              DISPLAY '* ERROR EN LECTURA ENTRADA= '
                      FS-E1CLIEN
              MOVE    9999                         TO RETURN-CODE

           END-EVALUATE
           .
       2100-LEER-F. EXIT.

      *****************
       2200-GRABAR-OK.
      *****************
      * Aumentar en 1 al contador de registros que cumplen filtro
           ADD        1                            TO WS-CANT-OK

      * Mover cantidad a valor secuencial de arch salida
           MOVE       WS-CANT-OK                   TO NOV-SECUEN

      * Mover valor de entrada a lo restante del archivo salida
           MOVE       WS-REG-NOVCLIE               TO NOV-RESTO

      * Escribir salida
           WRITE      REG-S1CLIOK                FROM REG-NOVCLIE-VAL

           EVALUATE   FS-S1CLIOK
           WHEN       '00'
           WHEN       '10'
              CONTINUE

           WHEN       OTHER
              DISPLAY '* ERROR EN GRABAR SALIDA = '
                      FS-S1CLIOK
              MOVE    9999                         TO RETURN-CODE

           END-EVALUATE
           .

       2200-GRABAR-OK-F. EXIT.

      **************
       3000-FINAL.
      **************
           IF         RETURN-CODE            NOT EQUAL 9999
              PERFORM 3010-CLOSE-FILES
                 THRU 3010-CLOSE-FILES-F
              PERFORM 3020-MOSTRAR-TOTALES
                 THRU 3020-MOSTRAR-TOTALES-F
           END-IF
           .

       3000-FINAL-F. EXIT.

      ********************
       3010-CLOSE-FILES.
      ********************
           CLOSE      E1CLIEN
           IF         FS-E1-ERROR
              DISPLAY '* ERROR EN CLOSE ENTRADA= '
                      FS-E1CLIEN
              MOVE    9999                          TO RETURN-CODE
           END-IF

           CLOSE S1CLIOK
           IF         FS-S1-ERROR
              DISPLAY '* ERROR EN CLOSE SALIDA= '
                      FS-S1CLIOK
              MOVE    9999                          TO RETURN-CODE
           END-IF
           .

       3010-CLOSE-FILES-F. EXIT.

      ************************
       3020-MOSTRAR-TOTALES.
      ************************
           DISPLAY    "-----------------------------------------"
           DISPLAY    ' TOTAL DE ENTRADAS LEIDAS: '
                      WS-CANT-LEIDOS
           DISPLAY    ' TOTAL DE APROBADOS      : '
                      WS-CANT-OK
           DISPLAY    ' TOTAL DE ERR‰NEOS       : '
                      WS-CANT-ERROR
           .

       3020-MOSTRAR-TOTALES-F. EXIT.

